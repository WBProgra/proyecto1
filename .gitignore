# --- Entornos Virtuales y Dependencias --- #
# Ignora los directorios de entornos virtuales más comunes.
.env
.venv
env/
venv/

# Paquetes y dependencias de Node.js
# Es crucial ignorar esta carpeta para evitar subir miles de archivos.
node_modules/
frontend/node_modules/

# Lockfiles de Node.js. Generalmente se recomienda subirlos al repositorio
# para tener builds consistentes, pero se mantienen ignorados según tu archivo.
package-lock.json
frontend/package-lock.json
frontend/yarn.lock


# --- Caché y Archivos Compilados de Python --- #
# Ignora los directorios de caché y archivos de bytecode generados por Python.
__pycache__/
*.py[cod]
*$py.class
.mypy_cache/
.pytest_cache/


# --- Bases de Datos y Logs --- #
# Ignora bases de datos locales y archivos de registro.
*.log
*.sqlite3
*.sqlite3-journal
pip-log.txt


# --- Archivos de Configuración de IDEs y Editores --- #
# Ignora configuraciones específicas de tu entorno de desarrollo local.
.idea/
.vscode/
.spyderproject
.ropeproject


# --- Archivos de Build y Distribución --- #
# Ignora los artefactos generados al construir o distribuir el proyecto.
build/
dist/
downloads/
eggs/
.eggs/
wheels/
*.egg-info/
*.egg
*.so


# --- Reportes de Pruebas y Cobertura (Testing) --- #
# Ignora los reportes generados por herramientas de testing.
.cache/
.coverage
.coverage.*
htmlcov/
.tox/


# --- Documentación Generada --- #
# Ignora la salida de generadores de documentación como Sphinx o MkDocs.
docs/_build/
site/


# --- Específicos de Frameworks y Herramientas --- #
# Django
local_settings.py

# Jupyter Notebook
.ipynb_checkpoints/

# Scrapy
.scrapy/


# --- Archivos de Bloqueo de Dependencias (Opcional) --- #
# Generalmente, se recomienda incluir estos archivos en el control de versiones
# para asegurar que todos los desarrolladores usen las mismas versiones de paquetes.
# Descomenta solo si tienes una razón específica para ignorarlos.
# Pipfile.lock
# poetry.lock
# pdm.lock